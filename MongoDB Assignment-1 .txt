Sudeept Dubey.

Assignment-1

Insert Document:

1) db.movies.insertMany( [
{
title : "Fight Club",
writer : "Chuck Palahniuko", year : 1999,
actors: [
"Brad Pitt", "Edward Norton"
]
},


{
title: "Pulp Fiction",
writer: "Quentin Tarantino", year: 1994,
actors: [
"John Travolta", "Uma Thurman"
]
},


{
title: "Inglorious Basterds", writer: "Quentin Tarantino", year: 2009,
actors: [

"Bradd Pitt", "Diane Cruger", "Eli Roth"
]

},


{

title: "The Hobbit:An Unexpected Journey", writer: "J.R.R Tolkein",
year: 2012,
franchise: "The Hobbit"


},


{

title: "The Hobbit:The Desolation of Smaug", writer: "J.R.R Tolkein",
year: 2013,
franchise: "The Hobbit"

},


{

title: "The Hobbit:The Battle of the Five Armies", writer: "J.R.R Tolkein",
year: 2012,
franchise: "The Hobbit" ,
  synopsis: "Bilbo and Company are forced to engage in a war against an array of combatants and keep the lonely Mountain from falling into the hands of a rising darkness"


},


{

title: " Pee Wee Herman's Big Adventure"

},
{

title: "Avatar"

}

])

Query/Find Documents:

1)db.getCollection('movies').find({}).pretty()
2)db.movies.find({writer:{$eq: "Quentin Tarantino" }})
3)db.movies.find({actors:{$eq: "Bradd Pitt" }})
4)db.movies.find({franchise:{$eq: "The Hobbit" }})
5)db.movies.find({year:{$gt: 1990}})
6) db.movies.find({$or:[ {year: {$lt : 2000},year:{$gt : 2010}}]})

Update Documents:

1)db.movies.update({title:"The Hobbit:An Unexpected Journey"},{$set:{Synopsis:"A reluctant hobbit,Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug}})
2)db.movies.update({title:"The Hobbit:The Desolation of Smaug"},{$set:{Synopsis:"The dwarves, along with Bilbo Baggins and Gandalf the grey,continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in posession of a mysterious & magical ring. "}})
3)db.movies.update({movie:"Pulp Fiction"},{$setOnInsert:{actor: "Samuel L. Jackson"}})

Text Search:

1)db.movies.find({$text:{$search:”Bilbo”}}).pretty()
2)db.movies.find({$text:{$search:”Gandalf”}}).pretty()
3)db.movies.find({$text:{$search:”Bilbo -Gandalf”}}).pretty()
4)db.movies.find({$text:{$search:"dwarves hobbit"}}).pretty()

5)db.movies.find({$text:{$search:"\"gold dragon\""}}).pretty()





Delete Documents:

1)db.movies.deleteOne({title:"Pee Wee Herman’s Big Adventure"})
2)db.movies.deleteOne({title:"Avatar"})

Relationships:

1) db.users.insert(
{
username:"GoodGuyGreg", first_name:"Good Guy", Last_name:"Greg", username: "ScumbagSteve", full_name:[
{ first:"Scumbag", last: "Steve"
}
]
}
)

02) db.posts.insert({


username:"GoodGuyGreg",


comments:[


{

title:"Passes out at party",


body:"Wakes up early and cleans house"


},


{


title:"Steals your identity",


body:"Raises your Credit Score"


},


{


title:"Reports a bug in your code",


body:"Sends you a Pull Request"


}


]

},




{


username:"ScumbagSteve",


comments:[


{


title:"Borrows something",


body:"Sells it"


},


{


title:"Borrows everything",


body:"The End"


},


{


title:"forks your repo on github",


body:"Sets to private"


}


]

}


)

03)


Querying Related Questions:

1)db.getCollection('users').find({})
2)db.getCollection('posts').find({})
3)db.posts.aggregate([{$match:{username:"GoodGuyGreg"}}])
4)db.posts.aggregate([{$match:{username:"ScumbagSteve"}}])
5)db.getCollection('comments').find({})
6)db.comments.aggregate([{$match:{username:"GoodGuyGreg"}}])
7)db.comments.aggregate([{$match:{username:"ScumbagSteve"}}])
8)db.comments.aggregate([{$match:{post:"5f8db8b3620fceb37960306a"}}])